// src/routes/member/[id]/+page.server.ts
import { teamsData, type Member } from '$lib/data/teamsData'; // Adjust path if needed
import { error } from '@sveltejs/kit';
import type { PageServerLoad, EntryGenerator } from './$types';

// 1. THIS IS KEY: Explicitly enable prerendering (static generation)
export const prerender = true;

// 2. Define all possible parameter values for [id] AT BUILD TIME
export const entries: EntryGenerator = () => {
    const memberEntries = [];
    for (const team of teamsData) {
        for (const member of team.members) {
            // The key 'id' must match your parameter name [id]
            memberEntries.push({ id: member.memberId });
        }
    }
    // Return unique entries if memberId might not be unique across teams
    // return [...new Map(memberEntries.map(item => [item.id, item])).values()];
    return memberEntries; // Assuming memberId is unique globally
};

// 3. Add a load function to provide data FOR EACH STATIC PAGE DURING BUILD
// This runs AT BUILD TIME because prerender = true
export const load: PageServerLoad = ({ params }) => {
    const memberId = params.id;
    let foundMember: Member | null = null;
    let teamName = ''; // This will be your 'category'
    let teamId = ''; // This will be your 'category'
    
    // Find the member and their team name
    for (const team of teamsData) {
        const member = team.members.find(m => m.memberId === memberId);
        if (member) {
            foundMember = member;
            teamName = team.teamName; // Get the team name
            teamId = team.teamId; // Get the team ID
            break;
        }
    }

    if (!foundMember) {
        // If an ID generated by entries() somehow doesn't exist, throw an error during build
        throw error(404, `Build Error: Member with ID ${memberId} not found`);
    }

    // Return the data needed by your +page.svelte component
    // This data gets baked into the static HTML file
    return {
        teamId: teamId,
        member: foundMember,
        teamName: teamName
    };
};

